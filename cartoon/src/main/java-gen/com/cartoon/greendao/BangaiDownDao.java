/*
package com.cartoon.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.cartoon.bean.BangaiDownLoadList;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

*/
/**
 * DAO for table "CARTOON_DOWN".
*//*

public class BangaiDownDao extends AbstractDao<BangaiDownLoadList,String>{

    public static final String TABLENAME = "BANGAI";

    */
/**
     * Properties of entity CartoonDown.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     * private String catalog;
     private String coverPic;
     private String id;
     private String title;
     private String content;
    *//*

    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property Title = new Property(1, String.class, "title", false, "TITLE");
        public final static Property Coverpic = new Property(2, String.class, "coverpic", false, "COVERPIC");
        public final static Property Content = new Property(3, String.class, "content", false, "CONTENT");
        public final static Property Catalog = new Property(4, String.class, "catalog", false, "CATALOG");
    };

    private DaoSession daoSession;


    public BangaiDownDao(DaoConfig config) {
        super(config);
    }

    public BangaiDownDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    */
/** Creates the underlying database table. *//*

    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"BANGAI\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"TITLE\" TEXT," + // 1: title
                "\"COVERPIC\" TEXT," + // 2: cover_pic
                "\"CONTENT\" TEXT," + // 3: collect
                "\"CATALOG\" TEXT);"); // 4: catalog
    }

    */
/** Drops the underlying database table. *//*

    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"BANGAI\"";
        db.execSQL(sql);
    }

    */
/** @inheritdoc *//*

    @Override
    protected void bindValues(SQLiteStatement stmt, BangaiDownLoadList entity) {
        stmt.clearBindings();

        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(2, title);
        }
 
        String coverpic = entity.getCoverPic();
        if (coverpic != null) {
            stmt.bindString(3, coverpic);
        }
 
        String content = entity.getCatalog();
        if (content != null) {
            stmt.bindString(4, content);
        }
 
        String catalog = entity.getCatalog();
        if (catalog != null) {
            stmt.bindString(5, catalog);
        }
    }

    @Override
    protected void attachEntity(BangaiDownLoadList entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    */
/** @inheritdoc *//*

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    */
/** @inheritdoc *//*

    @Override
    public BangaiDownLoadList readEntity(Cursor cursor, int offset) {
        BangaiDownLoadList entity = new BangaiDownLoadList( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // title
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // cover_pic
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // collect
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // catalog
        );
        return entity;
    }
     
    */
/** @inheritdoc *//*

    @Override
    public void readEntity(Cursor cursor, BangaiDownLoadList entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setTitle(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCoverPic(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setContent(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCatalog(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    */
/** @inheritdoc *//*

    @Override
    protected String updateKeyAfterInsert(BangaiDownLoadList entity, long rowId) {
        return entity.getId();
    }
    
    */
/** @inheritdoc *//*

    @Override
    public String getKey(BangaiDownLoadList entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    */
/** @inheritdoc *//*

    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
*/
